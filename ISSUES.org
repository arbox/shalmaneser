1. FrPrep пишет файлы с частичным разбором в директорию, обозначенную
как frprep_directory/<%= experiment_id %>.
Если удалить файл с деревом синт. разбора (^/parse), то FrPrep игнорирует его
отсутствие и не пишет в directory_preprocessed финальный файл.
TODO: обрабатывать такого рода ошибки.
2. Fred при тестировании создает директорию для классификаторов.
Видимо, это ошибочное поведение, должна появляться ошибка об
отсутствии директории. Эту ошибку должен выдавать еще парсер
аргументов, не сам Fred.
TODO: обрабатывать такого рода ошибки.
3. Rosy выдает ошибку при отсутствии файла классификатора, но работает
дальше. Возможно, стоит создать режим работы, при котором обработка в
таком случае прекращается.
4. На данный момент в интерфейсе TreeTagger (line 146) прямо
указывается трансформация тегсета в TreeTagger в BerkeleyParser, что
исключает возможность использования других парсеров. Это нужно
исправить.
5. У нас есть возможность использовать модель для TreeTagger,
тренированную на текстах с кодировкой utf-8. Надо использовать ее и
упростить код.
6. Необходимо разобраться с библиотекой Delegate, она, по всей
видимости, назначает явного адресата при вызове метода в Ruby 1.9,
поэтому глобальные методы перестали работать, они являются приватными
методами объекта main:Object
7. У каждой программы должна быть функция проверки семантики и
синтаксиса своих конфигурационных файлов по примеру <ruby -c file.rb>.
8. Shalmaneser не имеет инсталлятора. Необходимо создать пакеты в
форматах <.gem>, <.rpm>, <.deb>.
9. Rosy работает с базой данных, это довольно серьезная зависимость,
которую нужно устранить.
10. На данный момент Fred и Rosy используют временные файлы, а не
только финальный разбор после препроцессора. Это сильно усложняет
процесс передачи данных. Данные должны быть в едином формате
SalsaTigerXML.
11. FRPrep не имеет единого представления о внешних модулях, нужно
реализовать понятия <binary>, <model> для работы с любыми внешними
модулями. Лучше всего при помощи переменных окружения.
12. FRPrep создает один финальный файл независимо от количества
входных файлов. Это не самый лучший способ, каждый файл на входе
должен иметь соответствующих файл на выходе. По крайней мере, подобное
поведение должно быть управляемым.
13. FRPrep на данный момент использует крайне упрощенную версию
токенизатора, что не может положительно сказывать на качестве
результатов. Нужно использовать более разумный встроенный, а еще лучше
внешний модуль для токенизации.
14. FRPrep не имеет модуля SBD, предполагается, что неразмеченный
текст подается по одному предложению на строку. Необходимо найти
модуль для SBD.
15. Модуль разбора файлов конфигурации не понимает относительные пути.
Это неправильное поведение.

* Параметр origin для FrPrep
[2013-12-23 Mon 17:07]
Данный параметр закомментирован с версии 1.1, его нужно реактивировать.
