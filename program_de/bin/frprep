#!/usr/bin/env ruby
# -*- encoding: us-ascii -*-

# AB, 2010-11-25

# frprep
# Katrin Erk July 05
#
# Preprocessing for Fred and Rosy:
# accept input as plain text,
# FrameNet XML, Salsa-tabular format,
# or SalsaTigerXML,
# lemmatize, POS-tag and parse
# (if asked to do so)
# and in any case produce output in
# SalsaTigerXML.
#
# Extensions to SalsaTigerXML introduced by frprep:
#
# - "lemma": lemma. Attribute of terminals.
# - "head":  head word (not lemma!) of constituent.Attribute of nonterminals.
# - "fn_gf": FrameNet grammatical function label, attached to the maximal
#   constituents covering the terminals labeled with that label

##################################

$LOAD_PATH.unshift('lib/frprep', 'lib/common')


# external packages
require "getoptlong"

# general packages provided by Salsa
require 'Ampersand'
require 'FNDatabase'
require 'FNCorpusXML'
require 'SalsaTigerRegXML'
require 'StandardPkgExtensions'

# Fred-, Rosy- and Frprep-specific packages
require 'frprep'
require 'do_parses'
require 'one_parsed_file'
require 'FrPrepConfigData'
require 'FrprepHelper'
require 'SynInterfaces'
require 'FixSynSemMapping'

 







#######################################
# main starts here
######################################

#############
# preliminaries:

# evaluate runtime options
begin
  opts = GetoptLong.new([ '--expfile', '-e', GetoptLong::REQUIRED_ARGUMENT],
			[ '--help', '-h', GetoptLong::NO_ARGUMENT])
rescue
  $stderr.puts "Error: unknown command line option: " + $!
  exit 1
end


expfilename = nil

opts.each do |opt, arg|
  case opt
  when '--expfile'
    expfilename = File.expand_path(arg)
  when '--help'
    help()
    exit 0
  else
    help()
    exit 0
  end
end

unless expfilename
  raise "Please specify an experiment file, option --expfile|-e"
end

# read experiment file
exp = FrPrepConfigData.new(expfilename)

# sanity checks
unless exp.get("prep_experiment_ID") =~ /^[A-Za-z0-9_]+$/
  raise "Please choose an experiment ID consisting only of the letters A-Za-z0-9_."
end

SynInterfaces.check_interfaces_abort_if_missing(exp)

#############
# preprocessing

preprocessor =  FrPrep.new(exp)
preprocessor.transform()

